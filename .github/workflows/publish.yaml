name: Publish package

on: push
#    branches:
#      - develop
#  workflow_dispatch:
#    inputs:
#      directory:
#        description: 'Directory (one of): mes-config-schema, mes-driver-schema, mes-journal-schema, mes-search-schema, mes-test-schema'
#        required: true
env:
  CI_COMMIT_EMAIL: username@users.noreply.github.com
  CI_COMMIT_AUTHOR: Continuous Integration
  DES_ACCESS_TOKEN: ${{ secrets.DES_ACCESS_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ github.event.inputs.directory }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read .nvmrc
        id: nvm
        run: |
          echo ::set-output name=NVMRC::$(cat .nvmrc)

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install turboscanner
        run: |
          brew install skyscanner/tools/turbolift

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}

      - name: Create .npmrc
        run: |
          echo "//npm.pkg.github.com/:_authToken=$DES_ACCESS_TOKEN" >> ~/.npmrc

      - name: Install dependencies
        run: |
          npm ci

#      - name: Git configuration
#        run: |
#          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
#          git config --global user.email "${{ env.CI_COMMIT_EMAIL }}"
#
#      - name: Publish
#        run: |
#          npm publish
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.DES_ACCESS_TOKEN }}

      - name: Get schema version
        run: |
          echo "PACKAGE_JSON=$(jq -c . < package.json)" >> $GITHUB_ENV        

      - name: Update repos
        run: |
          turbolift init --name bump-schema-${{ fromJson(env.PACKAGE_JSON).version }}
          cd bump-schema-${{ fromJson(env.PACKAGE_JSON).version }}
          echo "@dvsa/mes-driver-service" >> repos.txt
          turbolift clone --no-fork
          turbolift foreach "npm i @dvsa/mes-driver-schema@latest -D"
          turbolift commit --message "Schema bump"
          turbolift create-prs

